{"version":3,"sources":["Square.js","reset.js","Box.js","index.js"],"names":["Square","props","className","onClick","Onclick","value","Reset","Restart","Box","useState","Array","fill","BoxSquares","SetBoxSquares","IsXnext","SetNext","draw","count","i","length","Draw","win","win_combinations","a","b","c","winner","status","renderSquare","index","squares","handleGame","ReactDOM","render","document","getElementById"],"mappings":"wQAYeA,G,KAVF,SAACC,GAEb,OACA,yBAAKC,UAAU,UACd,4BAAQA,UAAU,SAASC,QAASF,EAAMG,SACxCH,EAAMI,UCEKC,G,MAPH,SAACL,GAEZ,OACA,4BAAQC,UAAU,QAAQC,QAASF,EAAMM,SAAzC,WCkFcC,G,MAjFL,WACT,IAAD,EACmCC,mBAASC,MAAM,GAAGC,KAAK,OAD1D,mBACQC,EADR,KACoBC,EADpB,OAE0BJ,oBAAS,GAFnC,mBAEQK,EAFR,KAEiBC,EAFjB,KAyCMC,EAhBM,SAACJ,GAGV,IADA,IAAIK,EAAM,EACFC,EAAE,EAAEA,EAAEN,EAAWO,OAAOD,IAE5BN,EAAWM,IAEbD,IAGF,OAAGA,IAAQL,EAAWO,QAIf,KAECC,CAAKR,GACXS,EAvCS,WAYZ,IAVA,IAAMC,EAAiB,CACtB,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,GACL,CAAC,EAAE,EAAE,IAEEJ,EAAE,EAAEA,EAAEI,EAAiBH,OAAOD,IACtC,CAAC,IAAD,cACeI,EAAiBJ,GADhC,GACMK,EADN,KACSC,EADT,KACYC,EADZ,KAEC,GAAGb,EAAWW,KAAKX,EAAWY,IAAMZ,EAAWY,KAAKZ,EAAWa,GAE9D,OAAOb,EAAWW,GAGpB,OAAO,KAmBAG,GACJC,EAAON,EAAI,aAAD,OAAeA,GAC7BL,EAAK,YACLF,EAAQ,gBAAD,gBAcDc,EAAa,SAACC,GAElB,OAAO,kBAAC,EAAD,CAAQxB,MAAOO,EAAWiB,GAAQzB,QAAS,kBAVnC,SAACyB,GAEjB,IAAMC,EAAQlB,EACXA,EAAWiB,KACdC,EAAQD,GAAOf,EAAU,IAAM,IAC/BD,EAAciB,GACdf,GAASD,IAI8CiB,CAAWF,OAOlE,OACA,yBAAK3B,UAAU,MACd,2CACA,yBAAKA,UAAU,OAAO0B,EAAa,GAAIA,EAAa,GAAIA,EAAa,IACtE,yBAAK1B,UAAU,OAAO0B,EAAa,GAAIA,EAAa,GAAIA,EAAa,IAClE,yBAAK1B,UAAU,OAAO0B,EAAa,GAAIA,EAAa,GAAIA,EAAa,IACxE,yBAAK1B,UAAU,UAAUyB,GACzB,kBAAC,EAAD,CAAOpB,QAAS,kBAZF,WAEb,IAAMuB,EAAQpB,MAAM,GAAGC,KAAK,MAC7BE,EAAciB,GASMvB,SC5EtByB,IAASC,OAAO,kBAAC,EAAD,MAAOC,SAASC,eAAe,W","file":"static/js/main.5e7da8e5.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Square.css';\r\nconst Square=(props)=>\r\n{\r\n\treturn(\r\n\t<div className=\"Square\">\r\n\t\t<button className=\"buttun\" onClick={props.Onclick}>\r\n\t\t\t{props.value}\r\n\t\t</button>\r\n\t</div>\r\n\t);\r\n}\r\nexport default Square;","import React from \"react\";\r\nimport './Square.css';\r\nconst Reset=(props)=>\r\n{\r\n\treturn (\r\n\t<button className=\"extra\" onClick={props.Restart}>\r\n\t\tReset\r\n\t</button>);\r\n}\r\nexport default Reset;","import React,{useState} from 'react';\r\nimport Square from './Square.js';\r\nimport './Box.css';\r\nimport Reset from './reset.js';\r\nimport 'tachyons';\r\n\r\nconst Box=()=>\r\n{\r\n\tconst [BoxSquares, SetBoxSquares]=useState(Array(9).fill(null));\r\n\tconst [IsXnext, SetNext]=useState(true);\r\n\tconst winner=()=>\r\n\t{\r\n\t\tconst win_combinations=[\r\n\t\t\t[0,1,2],\r\n\t\t\t[3,4,5],\r\n\t\t\t[6,7,8],\r\n\t\t\t[0,3,6],\r\n\t\t\t[1,4,7],\r\n\t\t\t[2,5,8],\r\n\t\t\t[0,4,8],\r\n\t\t\t[2,4,6]\r\n\t\t];\r\n\t\tfor(let i=0;i<win_combinations.length;i++)\r\n\t\t{\r\n\t\t\tlet [a ,b ,c]=win_combinations[i];\r\n\t\t\tif(BoxSquares[a]===BoxSquares[b] && BoxSquares[b]===BoxSquares[c])\r\n\t\t\t{\r\n\t\t\t\treturn BoxSquares[a];\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\tconst Draw=(BoxSquares)=>\r\n \t{\r\n \t\tlet count=0;\r\n \t\tfor(let i=0;i<BoxSquares.length;i++)\r\n \t\t{\r\n \t\t\tif(BoxSquares[i])\r\n \t\t\t{\r\n \t\t\t\tcount++;\r\n \t\t\t}\r\n \t\t}\r\n \t\tif(count===BoxSquares.length)\r\n \t\t{\r\n \t\t\treturn true;\r\n \t\t}\r\n \t\treturn null;\r\n \t}\r\n \tlet draw=Draw(BoxSquares);\r\n\tlet win=winner();\r\n\tlet status=win?\t`Winner is ${win}`: \r\n\tdraw? `No Result`:\r\n\tIsXnext? `Player X Turn`: `Player O turn`;\r\n\t// if(win)\r\n\t// {\r\n\t// \tBoxSquares.fill(\" \");\r\n // \t\tSetBoxSquares(BoxSquares);\r\n\t// }\r\n\tconst handleGame=(index)=>\r\n\t{\r\n\t\tconst squares=BoxSquares;\r\n\t\tif(BoxSquares[index]) return;\r\n\t\tsquares[index]=IsXnext ? \"X\" : \"O\";\r\n\t\tSetBoxSquares(squares);\r\n\t\tSetNext(!IsXnext);\r\n\t}\r\n\tconst renderSquare=(index)=>\r\n \t{\r\n \t\treturn <Square value={BoxSquares[index]} Onclick={()=>handleGame(index)}/>\r\n \t}\r\n \tconst Restart=()=>\r\n \t{\r\n \t\tconst squares=Array(9).fill(null);\r\n\t\tSetBoxSquares(squares);\r\n \t}\r\n \treturn (\r\n \t<div className=\"tc\">\r\n \t\t<h1>Tic-Tac-Toe</h1>\r\n\t \t<div className=\"Row\">{renderSquare(0)}{renderSquare(1)}{renderSquare(2)}</div>\r\n\t\t<div className=\"Row\">{renderSquare(3)}{renderSquare(4)}{renderSquare(5)}</div>\r\n\t    <div className=\"Row\">{renderSquare(6)}{renderSquare(7)}{renderSquare(8)}</div>\r\n\t\t<div className=\"buffer\">{status}</div>\r\n\t\t<Reset Restart={()=>Restart()}/>\r\n\t</div>\r\n \t);\r\n\r\n}\r\nexport default Box;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport Box from './Box.js';\r\n// import * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<Box/>,document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\n"],"sourceRoot":""}